}
plot.after.cleaning <- qqnorm(df.var.val, main = "Distribution after cleaning") ; qqline(df.var.val)
hist.after.cleaning <- hist(clean.val, main = "Distribution of the RT after cleaning")
plot.before.cleaning
hist.before.cleaning
plot.after.cleaning
hist.after.cleaning
# Normality tests of Kolmogorov-Smirnov anf Shapiro Wilks
#shap.before <- shapiro.test(df.var.val)
#shap.after <- shapiro.test(clean.val)
#ks.before <- ks.test(df.var.val, "pnorm", mean = mean(df.var.val, na.rm = T), sd = sd(df.var.val, na.rm = T))
#ks.after <- ks.test(clean.val, "pnorm", mean = mean(df.var.val, na.rm = T), sd = sd(df.var.val, na.rm = T))
#ks.after$statistic
# results of the normality tests
#print(paste("Two tests of normality have been performed: the Kolmogorov-Smirnov and Shapiro-Wilks. The W statistic associated to the Shapiro-wilks test before cleaning is", round(shap.before$statistic,2), "and the associate p-val is:", round(shap.before$p.value,2), ". After cleaning, the W equals", round(shap.after$statistic,2)," and the corresponding p-val equals", round(shap.after$p.value,2),"."))
#print(paste("Regarding the Kolmogorov-Smirnov test, before cleaning, the D statistic is", round(ks.before$statistic,2), "while the corresponding p-val equals", round(ks.before$p.value,2),". After cleaning, the D statistic is", round(ks.after$statistic,2), "and the corresponding p-val equals", round(ks.after$p.value,2)))
}
clean.sd(df.var.val = data_gerg$TR, df.var.group = data_gerg$group, n.sd = 2, data = data_gerg, fill = NA)
rm(sum.lim.inf, sum.lim.sup, sum.lim.tot)
rm(clean.val)
clean.sd(df.var.val = data_gerg$TR, df.var.group = data_gerg$group, n.sd = 2, data = data_gerg, fill = NA)
clean.sd <- function(df.var.val, df.var.group, n.sd, data, fill = NA) {
plot.before.cleaning <- qqnorm(df.var.val, main = "Distribution before cleaning") ; qqline(df.var.val)
hist.before.cleaning <- hist(df.var.val, main = "Distribution of the RT before cleaning")
# Cr?ation d'un data frame avec les limites inf?rieures et sup?rieures
moy.df.test <- data.frame(aggregate(df.var.val, list(df.var.group), mean, na.rm = TRUE))
sd.df.test <- data.frame(aggregate(df.var.val, list(df.var.group), sd, na.rm = TRUE))
lim.df.test <- moy.df.test
lim.df.test$sd <- sd.df.test$x
lim.df.test$lim.inf <- lim.df.test$x - (n.sd*lim.df.test$sd)
lim.df.test$lim.sup <- lim.df.test$x + (n.sd*lim.df.test$sd)
print("Means, standard deviations, inferior and superior limits of the data:")
print(lim.df.test)
# Nettoyage des donn?es
for (i in 1:nrow(lim.df.test)) {
for (j in 1:nrow(data)) {
if (is.na(df.var.val[j])) {
next
} else if (lim.df.test$Group.1[i] == df.var.group[j]) {
if (df.var.val[j] <= lim.df.test$lim.inf[i]) {
df.var.val[j] <- fill
} else if (df.var.val[j] >= lim.df.test$lim.sup[i]) {
df.var.val[j] <- fill
}
}
}
}
clean.val <<- df.var.val
# V?rification du succ?s de l'op?ration
# D?finition du nombre de valeurs au dessus ou en dessous de la limite pour le premier sujet
sum.lim.sup <- sum(df.var.val[df.var.val == lim.df.test$Group.1[1]] >= lim.df.test$lim.sup[1], na.rm = TRUE) + sum(df.var.val[df.var.val == lim.df.test$Group.1[2]] >= lim.df.test$lim.sup[2], na.rm = TRUE)
sum.lim.inf <- sum(df.var.val[df.var.val == lim.df.test$Group.1[1]] <= lim.df.test$lim.inf[1], na.rm = TRUE) + sum(df.var.val[df.var.val == lim.df.test$Group.1[2]] <= lim.df.test$lim.inf[2], na.rm = TRUE)
sum.lim.tot <- sum(sum.lim.sup, sum.lim.inf)
if (sum.lim.tot == 0) {
print("The job is done and work was verified for the first 2 groups")
} else if (sum.lim.tot != 0) {
print("WARNING: BE CAREFUL, SOME EXTREME VALUES REMAIN AT LEAST IN THE FIRST 2 GROUPS")
}
plot.before.cleaning
hist.before.cleaning
qqnorm(df.var.val, main = "Distribution after cleaning") ; qqline(df.var.val)
hist(clean.val, main = "Distribution of the RT after cleaning")
# Normality tests of Kolmogorov-Smirnov anf Shapiro Wilks
#shap.before <- shapiro.test(df.var.val)
#shap.after <- shapiro.test(clean.val)
#ks.before <- ks.test(df.var.val, "pnorm", mean = mean(df.var.val, na.rm = T), sd = sd(df.var.val, na.rm = T))
#ks.after <- ks.test(clean.val, "pnorm", mean = mean(df.var.val, na.rm = T), sd = sd(df.var.val, na.rm = T))
#ks.after$statistic
# results of the normality tests
#print(paste("Two tests of normality have been performed: the Kolmogorov-Smirnov and Shapiro-Wilks. The W statistic associated to the Shapiro-wilks test before cleaning is", round(shap.before$statistic,2), "and the associate p-val is:", round(shap.before$p.value,2), ". After cleaning, the W equals", round(shap.after$statistic,2)," and the corresponding p-val equals", round(shap.after$p.value,2),"."))
#print(paste("Regarding the Kolmogorov-Smirnov test, before cleaning, the D statistic is", round(ks.before$statistic,2), "while the corresponding p-val equals", round(ks.before$p.value,2),". After cleaning, the D statistic is", round(ks.after$statistic,2), "and the corresponding p-val equals", round(ks.after$p.value,2)))
}
rm(clean.val)
clean.sd(df.var.val = data_gerg$TR, df.var.group = data_gerg$group, n.sd = 2, data = data_gerg, fill = NA)
clean.sd <- function(df.var.val, df.var.group, n.sd, data, fill = NA) {
plot.before.cleaning <- qqnorm(df.var.val, main = "Distribution before cleaning") ; qqline(df.var.val)
hist.before.cleaning <- hist(df.var.val, main = "Distribution of the RT before cleaning")
# Cr?ation d'un data frame avec les limites inf?rieures et sup?rieures
moy.df.test <- data.frame(aggregate(df.var.val, list(df.var.group), mean, na.rm = TRUE))
sd.df.test <- data.frame(aggregate(df.var.val, list(df.var.group), sd, na.rm = TRUE))
lim.df.test <- moy.df.test
lim.df.test$sd <- sd.df.test$x
lim.df.test$lim.inf <- lim.df.test$x - (n.sd*lim.df.test$sd)
lim.df.test$lim.sup <- lim.df.test$x + (n.sd*lim.df.test$sd)
print("Means, standard deviations, inferior and superior limits of the data:")
print(lim.df.test)
# Nettoyage des donn?es
for (i in 1:nrow(lim.df.test)) {
for (j in 1:nrow(data)) {
if (is.na(df.var.val[j])) {
next
} else if (lim.df.test$Group.1[i] == df.var.group[j]) {
if (df.var.val[j] <= lim.df.test$lim.inf[i]) {
df.var.val[j] <- fill
} else if (df.var.val[j] >= lim.df.test$lim.sup[i]) {
df.var.val[j] <- fill
}
}
}
}
clean.val <<- df.var.val
# V?rification du succ?s de l'op?ration
# D?finition du nombre de valeurs au dessus ou en dessous de la limite pour le premier sujet
sum.lim.sup <- sum(df.var.val[df.var.val == lim.df.test$Group.1[1]] >= lim.df.test$lim.sup[1], na.rm = TRUE) + sum(df.var.val[df.var.val == lim.df.test$Group.1[2]] >= lim.df.test$lim.sup[2], na.rm = TRUE)
sum.lim.inf <- sum(df.var.val[df.var.val == lim.df.test$Group.1[1]] <= lim.df.test$lim.inf[1], na.rm = TRUE) + sum(df.var.val[df.var.val == lim.df.test$Group.1[2]] <= lim.df.test$lim.inf[2], na.rm = TRUE)
sum.lim.tot <- sum(sum.lim.sup, sum.lim.inf)
if (sum.lim.tot == 0) {
print("The job is done and work was verified for the first 2 groups. The vector clean.val has been created. You need to add it to your original data")
} else if (sum.lim.tot != 0) {
print("WARNING: BE CAREFUL, SOME EXTREME VALUES REMAIN AT LEAST IN THE FIRST 2 GROUPS")
}
plot.before.cleaning
hist.before.cleaning
qqnorm(df.var.val, main = "Distribution after cleaning") ; qqline(df.var.val)
hist(clean.val, main = "Distribution of the RT after cleaning")
# Normality tests of Kolmogorov-Smirnov anf Shapiro Wilks
#shap.before <- shapiro.test(df.var.val)
#shap.after <- shapiro.test(clean.val)
#ks.before <- ks.test(df.var.val, "pnorm", mean = mean(df.var.val, na.rm = T), sd = sd(df.var.val, na.rm = T))
#ks.after <- ks.test(clean.val, "pnorm", mean = mean(df.var.val, na.rm = T), sd = sd(df.var.val, na.rm = T))
#ks.after$statistic
# results of the normality tests
#print(paste("Two tests of normality have been performed: the Kolmogorov-Smirnov and Shapiro-Wilks. The W statistic associated to the Shapiro-wilks test before cleaning is", round(shap.before$statistic,2), "and the associate p-val is:", round(shap.before$p.value,2), ". After cleaning, the W equals", round(shap.after$statistic,2)," and the corresponding p-val equals", round(shap.after$p.value,2),"."))
#print(paste("Regarding the Kolmogorov-Smirnov test, before cleaning, the D statistic is", round(ks.before$statistic,2), "while the corresponding p-val equals", round(ks.before$p.value,2),". After cleaning, the D statistic is", round(ks.after$statistic,2), "and the corresponding p-val equals", round(ks.after$p.value,2)))
}
rm(clean.val)
clean.sd(df.var.val = data_gerg$TR, df.var.group = data_gerg$group, n.sd = 2, data = data_gerg, fill = NA)
clean.subj.group <- function(group.var, subj.var, RT.var, N.sd, data){
require("dplyr")
# Not all datasets need to be specifically processed by group, the user should be able to chose. If it is not the case of your data frame, use the function clean.subj
#dplyr specificity due to the NSE, need for enquo each variable and specify !! in the dplyr functions
group.var <- enquo(group.var)
subj.var <- enquo(subj.var)
RT.var <- enquo(RT.var)
#creation of a data frame containing the age groups and the subjects names
subj <- data%>%
group_by(!!group.var, !!subj.var)%>%
summarise()%>%
rename(group = !!group.var)%>%
rename(subject = !!subj.var)
# Creation of a data frame containing the criteria according to which each subject will be compared
criterion <<- data.frame(subj$subject)
# Estimation of the upper and inferior limits for each subject inside each age group, excluding each subject one after the other
for (i in 1:dim(subj)) {
criterion[i,2:5] <<- data%>%
filter(!!group.var == subj$group[i])%>%
filter(!!subj.var != subj$subject[i])%>%
summarise(mean.grp = mean(!!RT.var, na.rm = T), sd = sd(!!RT.var, na.rm = T))%>%
mutate(lim_inf = mean.grp-(N.sd*sd), lim_sup = mean.grp+(N.sd*sd))
}
# Estimation of the mean of each subject
temp <- data%>%
group_by(!!group.var, !!subj.var)%>%
summarise(mean.subj = mean(!!RT.var, na.rm = T))
criterion$mean.subj <<- temp$mean.subj
# Comparing each subject to the criterion
criterion$criterion <<- NA
for (i in 1:dim(criterion)){
if (criterion$mean.subj[i] >= criterion$lim_inf[i] & criterion$mean.subj[i] <= criterion$lim_sup[i]){
criterion$criterion[i] <<- "kept"
} else if (criterion$mean.subj[i] < criterion$lim_inf[i] | criterion$mean.subj[i] > criterion$lim_sup[i]) {
criterion$criterion[i] <<- "OUT"
}
}
}
clean.subj.group(group.var = group, subj.var = sujet, RT.var = TR, N.sd = 2, data = data_gerg)
clean.subj.group <- function(group.var, subj.var, RT.var, N.sd, data){
require("dplyr")
# Not all datasets need to be specifically processed by group, the user should be able to chose. If it is not the case of your data frame, use the function clean.subj
#dplyr specificity due to the NSE, need for enquo each variable and specify !! in the dplyr functions
group.var <- enquo(group.var)
subj.var <- enquo(subj.var)
RT.var <- enquo(RT.var)
#creation of a data frame containing the age groups and the subjects names
subj <- data%>%
group_by(!!group.var, !!subj.var)%>%
summarise()%>%
rename(group = !!group.var)%>%
rename(subject = !!subj.var)
# Creation of a data frame containing the criteria according to which each subject will be compared
criterion <<- data.frame(subj$subject)
# Estimation of the upper and inferior limits for each subject inside each age group, excluding each subject one after the other
for (i in 1:nrow(subj)) {
criterion[i,2:5] <<- data%>%
filter(!!group.var == subj$group[i])%>%
filter(!!subj.var != subj$subject[i])%>%
summarise(mean.grp = mean(!!RT.var, na.rm = T), sd = sd(!!RT.var, na.rm = T))%>%
mutate(lim_inf = mean.grp-(N.sd*sd), lim_sup = mean.grp+(N.sd*sd))
}
# Estimation of the mean of each subject
temp <- data%>%
group_by(!!group.var, !!subj.var)%>%
summarise(mean.subj = mean(!!RT.var, na.rm = T))
criterion$mean.subj <<- temp$mean.subj
# Comparing each subject to the criterion
criterion$criterion <<- NA
for (i in 1:nrow(criterion)){
if (criterion$mean.subj[i] >= criterion$lim_inf[i] & criterion$mean.subj[i] <= criterion$lim_sup[i]){
criterion$criterion[i] <<- "kept"
} else if (criterion$mean.subj[i] < criterion$lim_inf[i] | criterion$mean.subj[i] > criterion$lim_sup[i]) {
criterion$criterion[i] <<- "OUT"
}
}
}
clean.subj.group(group.var = group, subj.var = sujet, RT.var = TR, N.sd = 2, data = data_gerg)
View(criterion)
clean.subj.group <- function(group.var, subj.var, RT.var, N.sd, data){
require("dplyr")
# Not all datasets need to be specifically processed by group, the user should be able to chose. If it is not the case of your data frame, use the function clean.subj
#dplyr specificity due to the NSE, need for enquo each variable and specify !! in the dplyr functions
group.var <- enquo(group.var)
subj.var <- enquo(subj.var)
RT.var <- enquo(RT.var)
#creation of a data frame containing the age groups and the subjects names
subj <- data%>%
group_by(!!group.var, !!subj.var)%>%
summarise()%>%
rename(group = !!group.var)%>%
rename(subject = !!subj.var)
# Creation of a data frame containing the criteria according to which each subject will be compared
criterion <- data.frame(subj$subject)
# Estimation of the upper and inferior limits for each subject inside each age group, excluding each subject one after the other
for (i in 1:nrow(subj)) {
criterion[i,2:5] <- data%>%
filter(!!group.var == subj$group[i])%>%
filter(!!subj.var != subj$subject[i])%>%
summarise(mean.grp = mean(!!RT.var, na.rm = T), sd = sd(!!RT.var, na.rm = T))%>%
mutate(lim_inf = mean.grp-(N.sd*sd), lim_sup = mean.grp+(N.sd*sd))
}
# Estimation of the mean of each subject
temp <- data%>%
group_by(!!group.var, !!subj.var)%>%
summarise(mean.subj = mean(!!RT.var, na.rm = T))
criterion$mean.subj <- temp$mean.subj
# Comparing each subject to the criterion
criterion$criterion <- NA
for (i in 1:nrow(criterion)){
if (criterion$mean.subj[i] >= criterion$lim_inf[i] & criterion$mean.subj[i] <= criterion$lim_sup[i]){
criterion$criterion[i] <- "kept"
} else if (criterion$mean.subj[i] < criterion$lim_inf[i] | criterion$mean.subj[i] > criterion$lim_sup[i]) {
criterion$criterion[i] <- "OUT"
}
}
return(criterion)
}
clean.subj.group(group.var = group, subj.var = sujet, RT.var = TR, N.sd = 2, data = data_gerg)
criterion <- clean.subj.group(group.var = group, subj.var = sujet, RT.var = TR, N.sd = 2, data = data_gerg)
View(criterion)
df.var.val = data_gerg$TR
df.var.group = data_gerg$group
n.sd = 2
data = data_gerg
fill = NA
data.frame(aggregate(df.var.val, list(df.var.group), mean, na.rm = TRUE))
data.frame(aggregate(df.var.val, list(df.var.group), sd, na.rm = TRUE))
mean(df.var.val)
mean(df.var.val, na.rm = T)
data.frame(mean(df.var.val, na.rm = T))
x <- mean(df.var.val, na.rm = T)
data.frame(x)
lim.df.test <- moy.df.test
x <- mean(df.var.val, na.rm = T)
moy.df.test <- data.frame(x)
x <- sd(df.var.val, na.rm = T)
sd.df.test <- data.frame(x)
lim.df.test <- moy.df.test
lim.df.test
lim.df.test$sd <- sd.df.test$x
lim.df.test
lim.df.test$lim.inf <- lim.df.test$x - (n.sd*lim.df.test$sd)
lim.df.test$lim.sup <- lim.df.test$x + (n.sd*lim.df.test$sd)
lim.df.test
print(lim.df.test)
# Creation of a data frame with the values above or under the mean of the group regarding the number of SD
moy.df.test <- data.frame(aggregate(df.var.val, list(df.var.group), mean, na.rm = TRUE))
sd.df.test <- data.frame(aggregate(df.var.val, list(df.var.group), sd, na.rm = TRUE))
lim.df.test <- moy.df.test
lim.df.test$sd <- sd.df.test$x
lim.df.test$lim.inf <- lim.df.test$x - (n.sd*lim.df.test$sd)
lim.df.test$lim.sup <- lim.df.test$x + (n.sd*lim.df.test$sd)
print("Means, standard deviations, inferior and superior limits of the data:")
print(lim.df.test)
lim.df.test$lim.sup
lim.df.test$lim.sup[1]
clean.sd <- function(df.var.val, df.var.group = "none", n.sd, data, fill = NA) {
plot.before.cleaning <- qqnorm(df.var.val, main = "Distribution before cleaning") ; qqline(df.var.val)
hist.before.cleaning <- hist(df.var.val, main = "Distribution of the RT before cleaning")
if(df.var.group == "none"){
# Creation of a data frame with the values above or under the general mean of RT regarding the number of SD
x <- mean(df.var.val, na.rm = T)
moy.df.test <- data.frame(x)
x <- sd(df.var.val, na.rm = T)
sd.df.test <- data.frame(x)
lim.df.test <- moy.df.test
lim.df.test$sd <- sd.df.test$x
lim.df.test$lim.inf <- lim.df.test$x - (n.sd*lim.df.test$sd)
lim.df.test$lim.sup <- lim.df.test$x + (n.sd*lim.df.test$sd)
for(i in 1:nrow(data)){
if(is.na(df.var.val[i])){
next
} else if(df.var.val[i] > lim.df.test$lim.sup[1]){
df.var.val[i] <- fill
} else if(df.var.val[i] < lim.df.test$lim.inf[1]){
df.var.val[i] <- fill
}
}
} else {
# Creation of a data frame with the values above or under the mean of the group regarding the number of SD
moy.df.test <- data.frame(aggregate(df.var.val, list(df.var.group), mean, na.rm = TRUE))
sd.df.test <- data.frame(aggregate(df.var.val, list(df.var.group), sd, na.rm = TRUE))
lim.df.test <- moy.df.test
lim.df.test$sd <- sd.df.test$x
lim.df.test$lim.inf <- lim.df.test$x - (n.sd*lim.df.test$sd)
lim.df.test$lim.sup <- lim.df.test$x + (n.sd*lim.df.test$sd)
print("Means, standard deviations, inferior and superior limits of the data:")
print(lim.df.test)
# Nettoyage des donn?es
for (i in 1:nrow(lim.df.test)) {
for (j in 1:nrow(data)) {
if (is.na(df.var.val[j])) {
next
} else if (lim.df.test$Group.1[i] == df.var.group[j]) {
if (df.var.val[j] <= lim.df.test$lim.inf[i]) {
df.var.val[j] <- fill
} else if (df.var.val[j] >= lim.df.test$lim.sup[i]) {
df.var.val[j] <- fill
}
}
}
}
}
clean.val <<- df.var.val
# V?rification du succ?s de l'op?ration
# D?finition du nombre de valeurs au dessus ou en dessous de la limite pour le premier sujet
sum.lim.sup <- sum(df.var.val[df.var.val == lim.df.test$Group.1[1]] >= lim.df.test$lim.sup[1], na.rm = TRUE) + sum(df.var.val[df.var.val == lim.df.test$Group.1[2]] >= lim.df.test$lim.sup[2], na.rm = TRUE)
sum.lim.inf <- sum(df.var.val[df.var.val == lim.df.test$Group.1[1]] <= lim.df.test$lim.inf[1], na.rm = TRUE) + sum(df.var.val[df.var.val == lim.df.test$Group.1[2]] <= lim.df.test$lim.inf[2], na.rm = TRUE)
sum.lim.tot <- sum(sum.lim.sup, sum.lim.inf)
if (sum.lim.tot == 0) {
print("The job is done and work was verified for the first 2 groups. The vector clean.val has been created. You need to add it to your original data.")
} else if (sum.lim.tot != 0) {
print("WARNING: BE CAREFUL, SOME EXTREME VALUES REMAIN AT LEAST IN THE FIRST 2 GROUPS")
}
plot.before.cleaning
hist.before.cleaning
qqnorm(df.var.val, main = "Distribution after cleaning") ; qqline(df.var.val)
hist(clean.val, main = "Distribution of the RT after cleaning")
# Normality tests of Kolmogorov-Smirnov anf Shapiro Wilks
#shap.before <- shapiro.test(df.var.val)
#shap.after <- shapiro.test(clean.val)
#ks.before <- ks.test(df.var.val, "pnorm", mean = mean(df.var.val, na.rm = T), sd = sd(df.var.val, na.rm = T))
#ks.after <- ks.test(clean.val, "pnorm", mean = mean(df.var.val, na.rm = T), sd = sd(df.var.val, na.rm = T))
#ks.after$statistic
# results of the normality tests
#print(paste("Two tests of normality have been performed: the Kolmogorov-Smirnov and Shapiro-Wilks. The W statistic associated to the Shapiro-wilks test before cleaning is", round(shap.before$statistic,2), "and the associate p-val is:", round(shap.before$p.value,2), ". After cleaning, the W equals", round(shap.after$statistic,2)," and the corresponding p-val equals", round(shap.after$p.value,2),"."))
#print(paste("Regarding the Kolmogorov-Smirnov test, before cleaning, the D statistic is", round(ks.before$statistic,2), "while the corresponding p-val equals", round(ks.before$p.value,2),". After cleaning, the D statistic is", round(ks.after$statistic,2), "and the corresponding p-val equals", round(ks.after$p.value,2)))
}
clean.val.group <- clean.val
rm(clean.val, clean.val.group)
rm(lim.df.test, moy.df.test, plot.before.cleaning, sd.df.test, df.var.group, df.var.val, fill, n.sd, X)
rm(lim.df.test, moy.df.test, plot.before.cleaning, sd.df.test, df.var.group, df.var.val, fill, n.sd, x)
rm(hist.before.cleaning)
clean.sd(df.var.val = data_gerg$TR, df.var.group = data_gerg$group, n.sd = 2, data = data_gerg, fill = NA)
df.var.val = data_gerg$TR
df.var.group = data_gerg$group
n.sd = 2
data = data_gerg
fill = NA
# Creation of a data frame with the values above or under the general mean of RT regarding the number of SD
x <- mean(df.var.val, na.rm = T)
moy.df.test <- data.frame(x)
x <- sd(df.var.val, na.rm = T)
sd.df.test <- data.frame(x)
lim.df.test <- moy.df.test
lim.df.test$sd <- sd.df.test$x
lim.df.test$lim.inf <- lim.df.test$x - (n.sd*lim.df.test$sd)
lim.df.test$lim.sup <- lim.df.test$x + (n.sd*lim.df.test$sd)
lim.df.test
View(data)
i = 1
is.na(df.var.val[i])
df.var.val[i] > lim.df.test$lim.sup[1]
df.var.val[i] <- fill
df.var.val[i] < lim.df.test$lim.inf[1]
i = 2
df.var.val[i] < lim.df.test$lim.inf[1]
df.var.val[i] > lim.df.test$lim.sup[1]
df.var.val[i] <- fill
for(i in 1:nrow(data)){
if(is.na(df.var.val[i])){
next
} else if(df.var.val[i] > lim.df.test$lim.sup[1]){
df.var.val[i] <- fill
} else if(df.var.val[i] < lim.df.test$lim.inf[1]){
df.var.val[i] <- fill
}
}
rm(data, lim.df.test, moy.df.test, sd.df.test, clean.val, df.var.group, df.var.val, fill, i, n.sd, x)
clean.sd(df.var.val = data_gerg$TR, df.var.group = data_gerg$group, n.sd = 2, data = data_gerg, fill = NA)
clean.val.group <- clean.val
clean.sd(df.var.val = data_gerg$TR, df.var.group = "none", n.sd = 2, data = data_gerg, fill = NA)
clean.sd <- function(df.var.val, df.var.group = "none", n.sd, data, fill = NA) {
plot.before.cleaning <- qqnorm(df.var.val, main = "Distribution before cleaning") ; qqline(df.var.val)
hist.before.cleaning <- hist(df.var.val, main = "Distribution of the RT before cleaning")
if(df.var.group == "none"){
# Creation of a data frame with the values above or under the general mean of RT regarding the number of SD
x <- mean(df.var.val, na.rm = T)
moy.df.test <- data.frame(x)
x <- sd(df.var.val, na.rm = T)
sd.df.test <- data.frame(x)
lim.df.test <- moy.df.test
lim.df.test$sd <- sd.df.test$x
lim.df.test$lim.inf <- lim.df.test$x - (n.sd*lim.df.test$sd)
lim.df.test$lim.sup <- lim.df.test$x + (n.sd*lim.df.test$sd)
for(i in 1:nrow(data)){
if(is.na(df.var.val[i])){
next
} else if(df.var.val[i] > lim.df.test$lim.sup[1]){
df.var.val[i] <- fill
} else if(df.var.val[i] < lim.df.test$lim.inf[1]){
df.var.val[i] <- fill
}
}
print(lim.df.test)
} else {
# Creation of a data frame with the values above or under the mean of the group regarding the number of SD
moy.df.test <- data.frame(aggregate(df.var.val, list(df.var.group), mean, na.rm = TRUE))
sd.df.test <- data.frame(aggregate(df.var.val, list(df.var.group), sd, na.rm = TRUE))
lim.df.test <- moy.df.test
lim.df.test$sd <- sd.df.test$x
lim.df.test$lim.inf <- lim.df.test$x - (n.sd*lim.df.test$sd)
lim.df.test$lim.sup <- lim.df.test$x + (n.sd*lim.df.test$sd)
print("Means, standard deviations, inferior and superior limits of the data:")
print(lim.df.test)
# Nettoyage des donn?es
for (i in 1:nrow(lim.df.test)) {
for (j in 1:nrow(data)) {
if (is.na(df.var.val[j])) {
next
} else if (lim.df.test$Group.1[i] == df.var.group[j]) {
if (df.var.val[j] <= lim.df.test$lim.inf[i]) {
df.var.val[j] <- fill
} else if (df.var.val[j] >= lim.df.test$lim.sup[i]) {
df.var.val[j] <- fill
}
}
}
}
}
clean.val <<- df.var.val
# V?rification du succ?s de l'op?ration
# D?finition du nombre de valeurs au dessus ou en dessous de la limite pour le premier sujet
sum.lim.sup <- sum(df.var.val[df.var.val == lim.df.test$Group.1[1]] >= lim.df.test$lim.sup[1], na.rm = TRUE) + sum(df.var.val[df.var.val == lim.df.test$Group.1[2]] >= lim.df.test$lim.sup[2], na.rm = TRUE)
sum.lim.inf <- sum(df.var.val[df.var.val == lim.df.test$Group.1[1]] <= lim.df.test$lim.inf[1], na.rm = TRUE) + sum(df.var.val[df.var.val == lim.df.test$Group.1[2]] <= lim.df.test$lim.inf[2], na.rm = TRUE)
sum.lim.tot <- sum(sum.lim.sup, sum.lim.inf)
if (sum.lim.tot == 0) {
print("The job is done and work was verified for the first 2 groups. The vector clean.val has been created. You need to add it to your original data.")
} else if (sum.lim.tot != 0) {
print("WARNING: BE CAREFUL, SOME EXTREME VALUES REMAIN AT LEAST IN THE FIRST 2 GROUPS")
}
plot.before.cleaning
hist.before.cleaning
qqnorm(df.var.val, main = "Distribution after cleaning") ; qqline(df.var.val)
hist(clean.val, main = "Distribution of the RT after cleaning")
# Normality tests of Kolmogorov-Smirnov anf Shapiro Wilks
#shap.before <- shapiro.test(df.var.val)
#shap.after <- shapiro.test(clean.val)
#ks.before <- ks.test(df.var.val, "pnorm", mean = mean(df.var.val, na.rm = T), sd = sd(df.var.val, na.rm = T))
#ks.after <- ks.test(clean.val, "pnorm", mean = mean(df.var.val, na.rm = T), sd = sd(df.var.val, na.rm = T))
#ks.after$statistic
# results of the normality tests
#print(paste("Two tests of normality have been performed: the Kolmogorov-Smirnov and Shapiro-Wilks. The W statistic associated to the Shapiro-wilks test before cleaning is", round(shap.before$statistic,2), "and the associate p-val is:", round(shap.before$p.value,2), ". After cleaning, the W equals", round(shap.after$statistic,2)," and the corresponding p-val equals", round(shap.after$p.value,2),"."))
#print(paste("Regarding the Kolmogorov-Smirnov test, before cleaning, the D statistic is", round(ks.before$statistic,2), "while the corresponding p-val equals", round(ks.before$p.value,2),". After cleaning, the D statistic is", round(ks.after$statistic,2), "and the corresponding p-val equals", round(ks.after$p.value,2)))
}
rm(clean.val, clean.val.group)
clean.sd(df.var.val = data_gerg$TR, df.var.group = data_gerg$group, n.sd = 2, data = data_gerg, fill = NA)
clean.val.group <- clean.val
clean.sd(df.var.val = data_gerg$TR, df.var.group = "none", n.sd = 2, data = data_gerg, fill = NA)
rm(clean.val)
clean.sd(df.var.val = data_gerg$TR, df.var.group = "none", n.sd = 2, data = data_gerg, fill = NA)
clean.val.no_group
clean.val.no_group <- clean.val
temp <- data.frame(clean.val.group, clean.val.no_group)
View(temp)
temp%>%
mutate(check = ifelse(clean.val.group != clean.val.no_group, "PROBLEM", "ok"))
temp%>%
mutate(check = ifelse(clean.val.group != clean.val.no_group, "PROBLEM", "ok"))%>%
group_by(check)%>%
summarize(N = n())
temp%>%
mutate(check = ifelse(clean.val.group != clean.val.no_group, "PROBLEM", "ok"),
check = ifelse(is.na(clean.val.group) & is.na(clean.val.no_group), "ok", "PROBLEM"))%>%
group_by(check)%>%
summarize(N = n())
temp%>%
mutate(check = ifelse(clean.val.group != clean.val.no_group, "PROBLEM", "ok"),
check = ifelse(is.na(clean.val.group) & is.na(clean.val.no_group), "ok", check))%>%
group_by(check)%>%
summarize(N = n())
clean.sd(df.var.val = data_gerg$TR, n.sd = 2, data = data_gerg, fill = NA)
library(devtools)
document()
install_github("EricMenetre/NPL")
library(NPL)
?clean.subj.group
?clean.sd
library(devtools)
document()
install_github("EricMenetre/NPL")
library(NPL)
number_to_word(2)
number_to_word(2, cap = T)
